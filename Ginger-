Imports System
Imports System.IO.Ports
Imports System.ComponentModel
Imports System.Runtime.InteropServices
Imports Microsoft.Win32

Public Class Form1
    Inherits System.Windows.Forms.Form 'Do kamery
    Dim znak As Char
    Dim polaczenie As Boolean = True
    'kamera

    Const WM_CAP_START = &H400S
    Const WS_CHILD = &H40000000
    Const WS_VISIBLE = &H10000000
    Const WM_CAP_DRIVER_CONNECT = WM_CAP_START + 10
    Const WM_CAP_DRIVER_DISCONNECT = WM_CAP_START + 11
    Const WM_CAP_EDIT_COPY = WM_CAP_START + 30
    Const WM_CAP_SEQUENCE = WM_CAP_START + 62
    Const WM_CAP_FILE_SAVEAS = WM_CAP_START + 23
    Const WM_CAP_SET_SCALE = WM_CAP_START + 53
    Const WM_CAP_SET_PREVIEWRATE = WM_CAP_START + 52
    Const WM_CAP_SET_PREVIEW = WM_CAP_START + 50
    Const SWP_NOMOVE = &H2S
    Const SWP_NOSIZE = 1
    Const SWP_NOZORDER = &H4S
    Const HWND_BOTTOM = 1
    'koniec kamery

    Private Sub ProgramToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles ProgramToolStripMenuItem.Click
        Panel1.Top = 27 'Klikniecie na program
        Panel1.Left = 12
        Panel1.Visible = True
        Panel2.Visible = False
    End Sub

    Private Sub SterowanieToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles SterowanieToolStripMenuItem.Click
        Panel2.Top = 27
        Panel2.Left = 12
        Panel2.Visible = True
        Panel1.Visible = False
    End Sub


    Private Sub Button9_Click(sender As Object, e As EventArgs) Handles Button9.Click
        'polacz


        If polaczenie Then
            _SerialPort1.Open()
            If _SerialPort1.IsOpen Then
                Button9.Text = "Rozlacz"
                polaczenie = False
                Label3.Text = "Polaczono"
                wlaczprzyciski()
            Else
                Label3.Text = "Nie polaczono"
                polaczenie = True
            End If
        Else
            wylaczprzyciski()
            Timer1.Enabled = False
            _SerialPort1.Close()
            Label3.Text = "Rozlaczono"
            Button9.Text = "Polacz"
        End If

    End Sub

    Private Sub Button5_MouseDown(sender As Object, e As MouseEventArgs) Handles Button5.MouseDown
        znak = "u"
        Timer1.Enabled = True
    End Sub

    Private Sub Button5_MouseUp(sender As Object, e As MouseEventArgs) Handles Button5.MouseUp
        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button7_MouseDown(sender As Object, e As MouseEventArgs) Handles Button7.MouseDown
        znak = "g"
        Timer1.Enabled = True
    End Sub

    Private Sub Button7_MouseUp(sender As Object, e As MouseEventArgs) Handles Button7.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button6_MouseDown(sender As Object, e As MouseEventArgs) Handles Button6.MouseDown

        znak = "d"
        Timer1.Enabled = True
    End Sub

    Private Sub Button6_MouseUp(sender As Object, e As MouseEventArgs) Handles Button6.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button8_MouseDown(sender As Object, e As MouseEventArgs) Handles Button8.MouseDown

        znak = "p"
        Timer1.Enabled = True
    End Sub

    Private Sub Button8_MouseUp(sender As Object, e As MouseEventArgs) Handles Button8.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button1_MouseDown(sender As Object, e As MouseEventArgs) Handles Button1.MouseDown

        znak = "f"
        Timer1.Enabled = True
    End Sub

    Private Sub Button1_MouseUp(sender As Object, e As MouseEventArgs) Handles Button1.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button4_MouseDown(sender As Object, e As MouseEventArgs) Handles Button4.MouseDown

        znak = "b"
        Timer1.Enabled = True
    End Sub

    Private Sub Button4_MouseUp(sender As Object, e As MouseEventArgs) Handles Button4.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button2_MouseDown(sender As Object, e As MouseEventArgs) Handles Button2.MouseDown

        znak = "l"
        Timer1.Enabled = True
    End Sub

    Private Sub Button2_MouseUp(sender As Object, e As MouseEventArgs) Handles Button2.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub

    Private Sub Button3_MouseDown(sender As Object, e As MouseEventArgs) Handles Button3.MouseDown

        znak = "r"
        Timer1.Enabled = True
    End Sub

    Private Sub Button3_MouseUp(sender As Object, e As MouseEventArgs) Handles Button3.MouseUp

        znak = "s"
        Timer1.Enabled = True
    End Sub



    Private Sub TrackBar1_ValueChanged(sender As Object, e As EventArgs) Handles TrackBar1.ValueChanged
        Label2.Text = (TrackBar1.Value / 255 * 100) & "%"
    End Sub

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        _SerialPort1.Write(znak)
    End Sub
    Private Sub wlaczprzyciski()
        Button1.Enabled = True
        Button2.Enabled = True
        Button3.Enabled = True
        Button4.Enabled = True
        Button5.Enabled = True
        Button6.Enabled = True
        Button7.Enabled = True
        Button8.Enabled = True
        Button10.Enabled = True
        TrackBar1.Enabled = True
    End Sub
    Private Sub wylaczprzyciski()
        Button1.Enabled = False
        Button2.Enabled = False
        Button3.Enabled = False
        Button4.Enabled = False
        Button5.Enabled = False
        Button6.Enabled = False
        Button7.Enabled = False
        Button8.Enabled = False
        Button10.Enabled = False
        TrackBar1.Enabled = False
    End Sub

    Private Sub Button10_Click(sender As Object, e As EventArgs) Handles Button10.Click
        If TrackBar1.Value = 255 Then
            TrackBar1.Value -= 1
        End If
        Label2.Text = "Zmieniono PWM"
        Timer1.Enabled = False
        _SerialPort1.Write("c")
        MsgBox("zmieniono PWM na: " & TrackBar1.Value)
        _SerialPort1.Write(Chr(TrackBar1.Value / 2))
        znak = "s"
        Timer1.Enabled = True
    End Sub
    'Bez kamery

    'kamera
    '--The capGetDriverDescription function retrieves the version 
    ' description of the capture driver--
    Declare Function capGetDriverDescriptionA Lib "avicap32.dll" _
    (ByVal wDriverIndex As Short, _
    ByVal lpszName As String, ByVal cbName As Integer, _
    ByVal lpszVer As String, _
    ByVal cbVer As Integer) As Boolean

    '--The capCreateCaptureWindow function creates a capture window--
    Declare Function capCreateCaptureWindowA Lib "avicap32.dll" _
    (ByVal lpszWindowName As String, ByVal dwStyle As Integer, _
    ByVal x As Integer, ByVal y As Integer, ByVal nWidth As Integer, _
    ByVal nHeight As Short, ByVal hWnd As Integer, _
    ByVal nID As Integer) As Integer

    '--This function sends the specified message to a window or windows--
    Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
    (ByVal hwnd As Integer, ByVal Msg As Integer, _
    ByVal wParam As Integer, _
    <MarshalAs(UnmanagedType.AsAny)> ByVal lParam As Object) As Integer

    '--Sets the position of the window relative to the screen buffer--
    Declare Function SetWindowPos Lib "user32" Alias "SetWindowPos" _
    (ByVal hwnd As Integer, _
    ByVal hWndInsertAfter As Integer, ByVal x As Integer, _
    ByVal y As Integer, _
    ByVal cx As Integer, ByVal cy As Integer, _
    ByVal wFlags As Integer) As Integer

    '--This function destroys the specified window--
    Declare Function DestroyWindow Lib "user32" _
    (ByVal hndw As Integer) As Boolean

    '---used to identify the video source---
    Dim CamSource As Integer

    '---used as a window handle---
    Dim hWnd As Integer

    Private Sub cameraSource()
        Dim DriverName As String = Space(80)
        Dim DriverVersion As String = Space(80)
        For i As Integer = 0 To 9
            If capGetDriverDescriptionA(i, DriverName, 80, _
            DriverVersion, 80) Then
                ListBox1.Items.Add(DriverName.Trim)
            End If
        Next
    End Sub

    Private Sub previewCamera(ByVal pbCtrl As PictureBox)
        hWnd = capCreateCaptureWindowA(CamSource, _
        WS_VISIBLE Or WS_CHILD, 0, 0, 0, _
        0, pbCtrl.Handle.ToInt32, 0)
        If SendMessage( _
        hWnd, WM_CAP_DRIVER_CONNECT, _
        CamSource, 0) Then
            '---set the preview scale---
            SendMessage(hWnd, WM_CAP_SET_SCALE, True, 0)
            '---set the preview rate (ms)---
            SendMessage(hWnd, WM_CAP_SET_PREVIEWRATE, 30, 0)
            '---start previewing the image---
            SendMessage(hWnd, WM_CAP_SET_PREVIEW, True, 0)
            '---resize window to fit in PictureBox control---
            SetWindowPos(hWnd, HWND_BOTTOM, 0, 0, _
            pbCtrl.Width, pbCtrl.Height, _
            SWP_NOMOVE Or SWP_NOZORDER)
        Else
            '--error connecting to video source---
            DestroyWindow(hWnd)
        End If
    End Sub

    Private Sub stopPreviewCamera()
        SendMessage(hWnd, WM_CAP_DRIVER_DISCONNECT, CamSource, 0)
        DestroyWindow(hWnd)
    End Sub

    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        cameraSource()
        '   Button4.Enabled = False
        ' Button1.Enabled = False
        ' Button2.Enabled = False
        '  Button3.Enabled = False
    End Sub

    Private Sub ListBox1_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox1.DoubleClick
        Label1.Visible = False
        previewCamera(PictureBox1)
        '  Button1.Enabled = True
        '  Button4.Enabled = False
        '  Button2.Enabled = True
    End Sub

    Private Sub ListBox1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox1.SelectedIndexChanged
        CamSource = ListBox1.SelectedIndex
        '---preview the selected video source
    End Sub

    'stop preview
    ' Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
    '     stopPreviewCamera()
    '   Button4.Enabled = True
    '   Button1.Enabled = False
    '  End Sub

    ' recording
    ' Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
    '    Button3.Enabled = True
    '    Button2.Enabled = False
    '   SendMessage(hWnd, WM_CAP_SEQUENCE, 0, 0)
    ' End Sub

    ' stop recording and ask to save video
    ' Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
    'Dim save As Integer
    '    save = MsgBox("Do you want to save your recording video", MsgBoxStyle.YesNo + MsgBoxStyle.Information, "Recording Video")
    '     If (save = MsgBoxResult.Yes) Then
    ' Dim saveName As New SaveFileDialog
    '        saveName.Filter = "Avi file(*.avi)|*.avi"
    '        If saveName.ShowDialog = Windows.Forms.DialogResult.OK Then
    ' SendMessage(hWnd, WM_CAP_FILE_SAVEAS, 0, "C:\RecordedVideo.avi")
    '           SendMessage(hWnd, WM_CAP_FILE_SAVEAS, 0, saveName.FileName)
    '       End If
    '   End If
    '   Me.Cursor = System.Windows.Forms.Cursors.Default
    '   Button2.Enabled = True
    '    Button3.Enabled = False
    '  End Sub

    ' preview
    ' Private Sub Button4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click
    ' CamSource = ListBox1.SelectedIndex
    '   previewCamera(PictureBox1)
    '    Button4.Enabled = False
    '    Button1.Enabled = True
    ' End Sub

End Class
